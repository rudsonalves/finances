1007: [
'''ALTER TABLE versionControl ADD COLUMN appControlApp TEXT DEFAULT ""''',
],
1008: [
'''BEGIN TRANSACTION''',
  
'''DROP TRIGGER IF EXISTS checkBalanceNextId''',
 
'''DROP TRIGGER IF EXISTS checkBalancePreviousId''',
  
'''ALTER TABLE transactionsTable ADD COLUMN transBalanceId INTEGER''',
  
'''ALTER TABLE transactionsTable ADD COLUMN transAccountId INTEGER''',
  
'''UPDATE transactionsTable SET transBalanceId = (
    SELECT transDayBalanceId FROM transDayTable 
    WHERE transDayTable.transDayTransId = transactionsTable.transId
)''',
  
'''UPDATE transactionsTable SET transAccountId = (
    SELECT balanceAccountId FROM balanceTable
      WHERE balanceTable.balanceId = transactionsTable.transBalanceId
  )''',
  
'''CREATE TABLE IF NOT EXISTS transactionsTable_new (
    transId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    transBalanceId INTEGER NOT NULL,
    transAccountId INTEGER NOT NULL,
    transDescription TEXT NOT NULL,
    transCategoryId INTEGER NOT NULL,
    transValue REAL NOT NULL,
    transStatus INTEGER NOT NULL,
    transTransferId INTEGER,
    transDate INTEGER NOT NULL,
    FOREIGN KEY (transCategoryId)
      REFERENCES categoriesTable (categoryId)
      ON DELETE RESTRICT,
    FOREIGN KEY (transBalanceId)
      REFERENCES balanceTable (balanceId)
      ON DELETE RESTRICT,
    FOREIGN KEY (transAccountId)
      REFERENCES accountTable (accountId)
      ON DELETE RESTRICT,
    FOREIGN KEY (transTransferId)
      REFERENCES transfersTable (transferId)
      ON DELETE RESTRICT
  )''',
'''INSERT INTO transactionsTable_new (transId, transBalanceId,
    transAccountId, transDescription, transCategoryId, transValue, 
    transStatus, transTransferId, transDate) 
    SELECT transId, transBalanceId, transAccountId, transDescription,
      transCategoryId, transValue, transStatus, transTransferId,
      transDate FROM transactionsTable''',
  
'''CREATE TABLE IF NOT EXISTS balanceTable_new (
    balanceId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    balanceAccountId INTEGER NOT NULL,
    balanceDate INTEGER NOT NULL,
    balanceTransCount INTEGER,
    balanceOpen REAL NOT NULL,
    balanceClose REAL NOT NULL,
    FOREIGN KEY (balanceAccountId)
      REFERENCES accountTable (accountId)
      ON DELETE RESTRICT
)''',
'''INSERT INTO balanceTable_new
    (balanceId, balanceAccountId, balanceDate, balanceTransCount, 
    balanceOpen, balanceClose) 
    SELECT balanceId, balanceAccountId, balanceDate, balanceTransCount, 
      balanceOpen, balanceClose FROM balanceTable''',
  
'''CREATE TABLE IF NOT EXISTS accountTable_new (
    accountId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    accountName TEXT NOT NULL,
    accountDescription TEXT,
    accountUserId TEXT NOT NULL,
    accountIcon INTEGER,
    FOREIGN KEY (accountIcon)
      REFERENCES iconsTable (iconId)
      ON DELETE CASCADE,
    FOREIGN KEY (accountUserId)
      REFERENCES usersTable (userId)
      ON DELETE RESTRICT
)''',

'''INSERT INTO accountTable_new 
    (accountId, accountName, accountDescription, 
    accountUserId, accountIcon) 
    SELECT accountId, accountName, accountDescription, 
      accountUserId, accountIcon FROM accountTable''',
  
'''CREATE TABLE IF NOT EXISTS transfersTable_new (
    transferId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    transferTransId0 INTEGER,
    transferTransId1 INTEGER,
    transferAccount0 INTEGER,
    transferAccount1 INTEGER,
    FOREIGN KEY (transferTransId0)
      REFERENCES transactionsTable (transId),
    FOREIGN KEY (transferTransId1)
      REFERENCES transactionsTable (transId),
    FOREIGN KEY (transferAccount0)
      REFERENCES accountTable (accountId)
      ON DELETE RESTRICT,
    FOREIGN KEY (transferAccount1)
      REFERENCES accountTable (accountId)
      ON DELETE RESTRICT
)''',

'''INSERT INTO transfersTable_new
    (transferId, transferTransId0, transferTransId1,
    transferAccount0, transferAccount1) 
    SELECT transferId, transferTransId0, transferTransId1,
      transferAccount0, transferAccount1
      FROM transfersTable''',

'''DROP TABLE transDayTable''',

'''CREATE TRIGGER IF NOT EXISTS triggerAfterInsertTransaction
    AFTER INSERT ON transactionsTable
    FOR EACH ROW
    BEGIN
      UPDATE balanceTable
      SET balanceClose = balanceClose + NEW.transValue,
    balanceTransCount = IFNULL(balanceTransCount, 0) + 1
      WHERE balanceAccountId = NEW.transAccountId
      AND balanceDate = NEW.transDate;
    END''',

'''CREATE TRIGGER IF NOT EXISTS triggerAfterDeleteTransaction
    AFTER DELETE ON transactionsTable
    FOR EACH ROW
    BEGIN
      UPDATE balanceTable
      SET balanceClose = balanceClose - OLD.transValue,
    balanceTransCount = IFNULL(balanceTransCount, 0) - 1
      WHERE balanceAccountId = OLD.transAccountId
      AND balanceDate = OLD.transDate;
    END''',

'''DROP TABLE balanceTable''',

'''DROP TABLE transfersTable''',

'''DROP TABLE transactionsTable''',

'''DROP TABLE accountTable''',

'''ALTER TABLE balanceTable_new RENAME TO balanceTable''',

'''ALTER TABLE transfersTable_new RENAME TO transfersTable''',

'''ALTER TABLE transactionsTable_new RENAME TO transactionsTable''',

'''ALTER TABLE accountTable_new RENAME TO accountTable''',

'''COMMIT''',
],
