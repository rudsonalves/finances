  * android/app/src/main/AndroidManifest.xml:
    - added permission for the app to write and read in the device's storage area.
  * lib/common/widgets/custom_modal_bottom_sheet.dart:
    - at this first moment I added a button to restore data. This process will still be improved.
  * lib/common/widgets/secondary_button.dart:
    - I reimplemented this button with an OutlinedButton.
  * lib/features/database_recover/database_recover.dart:
    - controls the app's recover/backup dialog. I shall separate and improve this process later on.
  * lib/features/settings/settings_page.dart:
    - simplified it with just one button to call the recover/backup dialog.
  * lib/features/sign_in/sign_in_controller.dart:
    - just simplified some log messages to be less informative.
  * lib/features/sign_in/sign_in_page.dart:
    - Added the button to call the recover/backup dialog in the initState() method.
  * lib/features/statistics/statistic_card/statistic_card.dart:
    - some aesthetic tweaks. There is a bug in this code that is presenting the header and information out of sync.
  * lib/repositories/account/sqflite_account_repository.dart:
  * lib/repositories/backup/backup_repository.dart:
  * lib/repositories/category/category_repository.dart:
  * lib/repositories/category/sqflile_category_repository.dart:
  * lib/repositories/user/sqflite_user_repository.dart:
    - added restart() method to restart repository
  * lib/repositories/backup/sqlflite_backup_repository.dart:
    - control layer over sqflite to manage app backup/restore.
  * lib/services/database/database_helper.dart:
  * lib/services/database/sqlflite_helper.dart:
    - adjusted the Scheme database version;
    - added dbSchemeVersion() method to format database Scheme version;
    - added backupDatabase([String? destinyDir]) method to backup app database;
    - added method Future<bool> restoreDatabase(String newDbPath) to restore app database.
  * pubspec.yaml:
    - added file_picker package to generate dialog to access device directory tree.